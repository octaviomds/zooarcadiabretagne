tinymce.PluginManager.add("bf_buttons",function(t,e){let n=window.innerHeight>500?500:window.innerHeight-20;function i(i){let c=t.selection.getNode(),u="",a="Insert Button/Link",r={text:"Cancel",type:"cancel"},s=i?[r,{text:"Save",name:"Edit Button",type:"custom",primary:!0}]:[r,{text:"Select Action",name:"Select Action",type:"custom",primary:!0}];if(i){a="Edit Button/Link";let t={classes:c.className},e=JSON.stringify(t);u=`?data=${encodeURIComponent(e)}`}else{let t='\n            button[title="Select Action"].tox-button {\n                background-color: #05acf0;\n                border-color: #05acf0;\n            }\n            button[title="Select Action"].tox-button:hover {\n                background-color: #0089d1 !important;\n                border-color: #0089d1 !important;\n            }';buildfire.wysiwyg.injectPluginStyles(t)}t.windowManager.openUrl({title:a,url:`${e}/dialog.html${u}`,width:500,height:n,buttons:s,onAction:(t,e)=>{"Select Action"===e.name?t.sendMessage({message:"getButtonData"}):"Edit Button"===e.name&&t.sendMessage({message:"getButtonData"})},onMessage:(e,n)=>{let u=n.data.content,a=n.mceAction;if(u&&"setButtonData"===a)if(i){let n=-1,i="button"===u.type?"bf-btn-"+u.buttonStyle:"bf-text-"+u.buttonStyle,o=c.className.split(" ");o.forEach((t,e)=>{"button"===u.type?t.includes("bf-btn-")&&(n=e):"link"===u.type&&t.includes("bf-text-")&&(n=e)}),n>-1&&(o[n]=i,c.className=o.join(" ")),e.close(),t.isNotDirty=!1,t.fire("change")}else o(options={},(n,i)=>{if(n)return console.error(n);let o=document.createElement("button"===u.type?"button":"a");o.className="button"===u.type?"bf-btn bf-btn-"+u.buttonStyle:"bf-text-"+u.buttonStyle,o.setAttribute("data-execute",i.stringifiedActionItem),o.setAttribute("onclick","buildfire.actionItems.execute(JSON.parse(unescape(this.getAttribute('data-execute'))), ()=>{})"),o.innerText=i.actionItem.title,t.insertContent(o.outerHTML+"&nbsp;"),e.close()})}})}function o(t,e){let n={};(t=t||{}).actionItem=t.actionItem||{},buildfire.actionItems.showDialog(t.actionItem,{allowNoAction:!0,showIcon:!1,showTitle:!1},(t,i)=>t?e(t,null):i?(n.actionItem=i,n.stringifiedActionItem=escape(JSON.stringify(i)),void e(null,n)):e("There is no action item",null))}function c(){let e={},n=t.selection.getNode();e.actionItem=JSON.parse(unescape(n.dataset.execute)),o(e,(e,i)=>{if(e)return console.error(e);n.innerText=i.actionItem.title,n.setAttribute("data-execute",i.stringifiedActionItem),t.isNotDirty=!1,t.fire("change")})}return t.ui.registry.addButton("bf_edit_button",{icon:"edit-block",tooltip:"Edit button",onAction:function(){i(!0)}}),t.ui.registry.addButton("bf_edit_button_action",{icon:"link",tooltip:"Edit button action",onAction:function(){c()}}),t.ui.registry.addContextToolbar("editBfButton",{predicate:function(t){let e=t.className;return e.includes("bf-btn")||e.includes("bf-text-")},items:"bf_edit_button | bf_edit_button_action",position:"node",scope:"node"}),t.ui.registry.addMenuItem("bf_insertButtonOrLink",{text:"Insert button/link",onAction:function(){i(!1)}}),t.ui.registry.addMenuItem("bf_editButtonOrLink",{text:"Edit button/link",icon:"edit-block",onAction:function(){i(!0)}}),t.ui.registry.addMenuItem("bf_editButtonOrLinkAction",{text:"Edit button/link action",icon:"link",onAction:function(){c()}}),t.ui.registry.addContextMenu("bf_buttonOrLinkContextMenu",{update:function(e){let n=e.className;return n.includes("bf-btn")||n.includes("bf-text-")?(t.execCommand("mceSelectNode",!1,e),"bf_editButtonOrLink bf_editButtonOrLinkAction"):""}}),{getMetadata:function(){return{name:"Buttons Plugin"}}}});
