if("undefined"==typeof buildfire)throw"please add buildfire.js first to use buildfire components";void 0===buildfire.components&&(buildfire.components={}),void 0===buildfire.components.control&&(buildfire.components.control={}),"undefined"==typeof Tagify&&(document.write('<script src="../../../../scripts/tagify/tagify.min.js"><\/script>'),document.write('<script src="../../../../scripts/tagify/tagify.polyfills.min.js"><\/script>')),buildfire.components.control.tagsInput=class{constructor(t,e={}){this._readyToFireEvent=!0,this._tagifyTags=null,this.activeTags=[],this.container=null,this.selector=t||null;var i=e.settings?.source?e.settings.source:[];let s="list";if("function"==typeof i)s="custom";else for(let t=0;t<i.length;t++)if(!this._validateSource(i[t]))throw Error("Invalid source, missing value");this.settings={source:i,sourceType:s,allowAutoComplete:void 0===e.settings?.allowAutoComplete||e.settings.allowAutoComplete,allowUserInput:void 0===e.settings?.allowUserInput||e.settings.allowUserInput},this.languageSettings={placeholder:e.languageSettings?.placeholder||"Select Tags"},this._init()}_validateSource(t){return!(!t||!t.value||"string"!=typeof t.value)}_init(){var t=document.querySelector(this.selector);if(!t)throw new Error("Element not found!");this.container=t,this._buildComponent()}_tagify(t){var e={whitelist:"list"===this.settings.sourceType?this.settings.source:[],autoComplete:{enabled:this.settings.allowAutoComplete,rightKey:this.settings.allowAutoComplete},enforceWhitelist:!1,userInput:this.settings.allowUserInput};this._tagifyTags=new Tagify(t,e),this._tagifyTags.on("remove",()=>this._onAddRemoveTag()),this._tagifyTags.on("change",()=>this._onAddRemoveTag())}_buildComponent(){if("list"===this.settings.sourceType)this.container.innerHTML=`<input type="text" class="form-control" placeholder="${this.languageSettings.placeholder}" >`;else{this.container.innerHTML=`
            <div class="input-group">
                <input type="text" class="form-control tagify_input_hide_courser" placeholder="${this.languageSettings.placeholder}" >
                <span class="input-group-addon icon icon-plus add_tagBtn"></span>
            </div>`;let t=this.container.querySelector("span");t.addEventListener("click",()=>{this.settings.source({},t=>{this.set(t)})})}var t=this.container.querySelector("input");this._tagify(t)}_onAddRemoveTag(){this.activeTags=this._tagifyTags.value.length?this._tagifyTags.value.map(t=>t):[],this._readyToFireEvent&&this.onUpdate({tags:this.activeTags})}append(e){let i=[];if(e&&Array.isArray(e))for(let t=0;t<e.length;t++){if(!this._validateSource(e[t]))throw Error("Invalid data, missing value");i.push(e[t])}else{if(!this._validateSource(e))throw Error("Invalid data, missing value");i.push(e)}for(let t=0;t<i.length;t++)this.activeTags.push(i[t]);this._tagifyTags.addTags(i)}clear(){this.activeTags=[],this._tagifyTags.removeAllTags()}set(t){this._readyToFireEvent=!1,this.activeTags=[],this._tagifyTags.removeAllTags(),this._readyToFireEvent=!0,this.append(t)}get(){return this.activeTags}onUpdate(t){throw new Error("function not implemented")}},buildfire.components.control.userTagsInput=class extends buildfire.components.control.tagsInput{constructor(t,e={}){super(t,{settings:{source:(t,s)=>{buildfire.auth.showTagsSearchDialog(null,(t,e)=>{if(t)return console.error(t);if(e){t=this.get();let i=[...e,...t];i=i.map(t=>({...t,value:t.tagName}));for(let e=0;e<i.length;e++)for(let t=e+1;t<i.length;t++)i[e].value===i[t].value&&(i.splice(t,1),--t);s(i)}})},allowAutoComplete:!1,allowUserInput:!1},languageSettings:e.languageSettings})}};
//# sourceMappingURL=tagsInput.min.js.map
